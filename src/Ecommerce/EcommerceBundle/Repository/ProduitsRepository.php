<?php

namespace Ecommerce\EcommerceBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProduitsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitsRepository extends EntityRepository {

    public function findArray($keys) {

        $qb = $this->createQueryBuilder('u')
                ->select('u')
                ->where('u.id IN (:keys)')
                ->setParameter('keys', $keys);
        return $qb->getQuery()->getResult();
    }

//    public function byCategorie($idcategorie) {
//        $qb = $this->createQueryBuilder('p')
//        ->select('p')
//        ->leftJoin('p.categorie', 'c')
//        ->where('c.id = :idcategorie')
//        ->andWhere('p.disponible = 1')
//        ->orderBy('p.id')
//        ->setParameter('idcategorie', $idcategorie);
//       // ->leftJoin('partner_address', 'pa', 'ON', 'pa.id_partner = p.id')
//        return $qb->getQuery()->getResult();
//    }

       public function byCategorie($categorie) {
        $qb = $this->createQueryBuilder('p')
        ->select('p')
        ->where('p.categorie = :categorie')
        ->andWhere('p.disponible = 1')
        ->orderBy('p.id')
        ->setParameter('categorie', $categorie);
        return $qb->getQuery()->getResult();
    }
    
    public function bynom($nom) {
        $qb = $this->createQueryBuilder('p')
        ->select('p')
        ->where('p.nom like :nom')
        //->andWhere('p.disponible = 1')
        ->orderBy('p.id')
        ->setParameter('nom', $nom);
//        return $qb->getQuery()->getResult();
        return $qb->getQuery()->execute();
    }
}
